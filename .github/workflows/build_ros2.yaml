name: build and publish ROS2
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build-docker-images:
    strategy:
      matrix:
        architecture: [amd64, arm64]
        ubuntu_distro: [24.04]
        ros_distro: [humble]
    runs-on: ${{ matrix.architecture == 'amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.architecture }}
      - uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tiiuae/ubuntu-ros2-base
          tags: |
            type=raw,value=${{ matrix.ubuntu_distro }}-${{ matrix.ros_distro }}-${{ matrix.architecture }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.architecture }}
          file: ./Dockerfile_${{ matrix.ubuntu_distro }}_${{ matrix.ros_distro }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
      - name: Save tags to file
        run: echo "${{ steps.meta.outputs.tags }}" > tags_${{ matrix.ubuntu_distro }}_${{ matrix.ros_distro }}_${{ matrix.architecture }}.txt
      - name: Upload tags file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tags_${{ matrix.ubuntu_distro }}_${{ matrix.ros_distro }}_${{ matrix.architecture }}
          path: tags_${{ matrix.ubuntu_distro }}_${{ matrix.ros_distro }}_${{ matrix.architecture }}.txt

  merge-images:
    needs: build-docker-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./output
          pattern: tags_*
          merge-multiple: true
      - name: Combine tags into a single file
        run: cat ./output/tags_*.txt > images.txt
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create combined image manifests
        run: |
          # Create a unique list of base tags by removing the architecture suffix
          cat images.txt | sed 's/-[^-]*$//' | sort -u > base_tags.txt
          echo "Base tags: $(cat base_tags.txt)"
          # Process each unique base tag
          while read -r base_tag; do
            echo "Processing base tag: $base_tag"
            docker manifest create "$base_tag" \
              "$base_tag-amd64" \
              "$base_tag-arm64"
            docker manifest push "$base_tag"
          done < base_tags.txt